{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sethstephens/Desktop/fureverv4 2/furever/Client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sethstephens/Desktop/fureverv4 2/furever/Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/sethstephens/Desktop/fureverv4 2/furever/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{useCookies}from\"react-cookie\";import'./ChatFeature.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MatchesDisplay=function MatchesDisplay(_ref){var matches=_ref.matches,setselectedUser=_ref.setselectedUser;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),matchedProfiles=_useState2[0],setMatchedProfiles=_useState2[1];var _useCookies=useCookies(null),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];// The code below is retrieving data from the \"users\" endpoint on a local server. It is then mapping the response to only \n// return the \"user_id\" key and setting the state of \"matchedProfiles\" to the response data.\nvar usersMatchesByID=matches.map(function(_ref2){var user_id=_ref2.user_id;return user_id;});var userId=cookies.UserId;var getUserMatches=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"http://localhost:8888/users\",{params:{userIds:JSON.stringify(usersMatchesByID)}});case 3:response=_context.sent;setMatchedProfiles(response.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function getUserMatches(){return _ref3.apply(this,arguments);};}();// The code below gets the matches and then filters the matched profiles by the user ID. It then sets the state of\n// \"matchedProfiles\" to the filtered response data.\nuseEffect(function(){getUserMatches();},[matches]);var filteredMatchedProfiles=matchedProfiles===null||matchedProfiles===void 0?void 0:matchedProfiles.filter(function(matchedProfile){return matchedProfile.matches.filter(function(profile){return profile.user_id===userId;}).length>0;});// It renders a list of matches, where each match has an image, name, and index. When you click on a match, \n// it sets the clicked user to that match.\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"matches-display\",children:filteredMatchedProfiles===null||filteredMatchedProfiles===void 0?void 0:filteredMatchedProfiles.map(function(match,_index){return/*#__PURE__*/_jsxs(\"div\",{className:\"match-card\",onClick:function onClick(){return setselectedUser(match);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"img-container\",children:/*#__PURE__*/_jsx(\"img\",{src:match===null||match===void 0?void 0:match.url,alt:(match===null||match===void 0?void 0:match.First_Name)+\" profile\"})}),/*#__PURE__*/_jsx(\"h3\",{children:match===null||match===void 0?void 0:match.First_Name}),/*#__PURE__*/_jsx(\"h3\",{children:match===null||match===void 0?void 0:match.Phone_Number})]},_index);})});};export default MatchesDisplay;","map":{"version":3,"names":["axios","useEffect","useState","useCookies","MatchesDisplay","matches","setselectedUser","matchedProfiles","setMatchedProfiles","cookies","setCookie","removeCookie","usersMatchesByID","map","user_id","userId","UserId","getUserMatches","get","params","userIds","JSON","stringify","response","data","console","log","filteredMatchedProfiles","filter","matchedProfile","profile","length","match","_index","url","First_Name","Phone_Number"],"sources":["/Users/sethstephens/Desktop/fureverv4 2/furever/Client/src/components/ChatFeature/UserMatches.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport './ChatFeature.scss'\n\nconst MatchesDisplay = ({ matches, setselectedUser }) => {\n  const [matchedProfiles, setMatchedProfiles] = useState(null);\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n\n\n  // The code below is retrieving data from the \"users\" endpoint on a local server. It is then mapping the response to only \n  // return the \"user_id\" key and setting the state of \"matchedProfiles\" to the response data.\n  const usersMatchesByID = matches.map(({ user_id }) => user_id);\n  const userId = cookies.UserId;\n\n  const getUserMatches = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8888/users\", {\n        params: { userIds: JSON.stringify(usersMatchesByID) },\n      });\n      setMatchedProfiles(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // The code below gets the matches and then filters the matched profiles by the user ID. It then sets the state of\n  // \"matchedProfiles\" to the filtered response data.\n  useEffect(() => {\n    getUserMatches();\n  }, [matches]);\n\n  const filteredMatchedProfiles = matchedProfiles?.filter(\n    (matchedProfile) =>\n      matchedProfile.matches.filter((profile) => profile.user_id === userId)\n        .length > 0\n  );\n\n  // It renders a list of matches, where each match has an image, name, and index. When you click on a match, \n  // it sets the clicked user to that match.\n  return (\n    <div className=\"matches-display\">\n      {filteredMatchedProfiles?.map((match, _index) => (\n        <div\n          key={_index}\n          className=\"match-card\"\n          onClick={() => setselectedUser(match)}\n        >\n          <div className=\"img-container\">\n            <img src={match?.url} alt={match?.First_Name + \" profile\"} />\n          </div>\n          <h3>{match?.First_Name}</h3>\n          <h3>{match?.Phone_Number}</h3>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MatchesDisplay;"],"mappings":"obAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,UAAU,KAAQ,cAAc,CACzC,MAAO,oBAAoB,yFAE3B,GAAMC,eAAc,CAAG,QAAjBA,eAAc,MAAqC,IAA/BC,QAAO,MAAPA,OAAO,CAAEC,eAAe,MAAfA,eAAe,CAChD,cAA8CJ,QAAQ,CAAC,IAAI,CAAC,wCAArDK,eAAe,eAAEC,kBAAkB,eAC1C,gBAA2CL,UAAU,CAAC,IAAI,CAAC,4CAApDM,OAAO,iBAAEC,SAAS,iBAAEC,YAAY,iBAGvC;AACA;AACA,GAAMC,iBAAgB,CAAGP,OAAO,CAACQ,GAAG,CAAC,mBAAGC,QAAO,OAAPA,OAAO,OAAOA,QAAO,GAAC,CAC9D,GAAMC,OAAM,CAAGN,OAAO,CAACO,MAAM,CAE7B,GAAMC,eAAc,6FAAG,wLAEIjB,MAAK,CAACkB,GAAG,CAAC,6BAA6B,CAAE,CAC9DC,MAAM,CAAE,CAAEC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAACV,gBAAgB,CAAE,CACtD,CAAC,CAAC,QAFIW,QAAQ,eAGdf,kBAAkB,CAACe,QAAQ,CAACC,IAAI,CAAC,CAAC,+EAElCC,OAAO,CAACC,GAAG,aAAO,CAAC,oEAEtB,kBATKT,eAAc,2CASnB,CAED;AACA;AACAhB,SAAS,CAAC,UAAM,CACdgB,cAAc,EAAE,CAClB,CAAC,CAAE,CAACZ,OAAO,CAAC,CAAC,CAEb,GAAMsB,wBAAuB,CAAGpB,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAEqB,MAAM,CACrD,SAACC,cAAc,QACbA,eAAc,CAACxB,OAAO,CAACuB,MAAM,CAAC,SAACE,OAAO,QAAKA,QAAO,CAAChB,OAAO,GAAKC,MAAM,GAAC,CACnEgB,MAAM,CAAG,CAAC,GAChB,CAED;AACA;AACA,mBACE,YAAK,SAAS,CAAC,iBAAiB,UAC7BJ,uBAAuB,SAAvBA,uBAAuB,iBAAvBA,uBAAuB,CAAEd,GAAG,CAAC,SAACmB,KAAK,CAAEC,MAAM,qBAC1C,aAEE,SAAS,CAAC,YAAY,CACtB,OAAO,CAAE,yBAAM3B,gBAAe,CAAC0B,KAAK,CAAC,EAAC,wBAEtC,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,GAAG,CAAEA,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEE,GAAI,CAAC,GAAG,CAAE,CAAAF,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEG,UAAU,EAAG,UAAW,EAAG,EACzD,cACN,oBAAKH,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEG,UAAU,EAAM,cAC5B,oBAAKH,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEI,YAAY,EAAM,GARzBH,MAAM,CASP,EACP,CAAC,EACE,CAEV,CAAC,CAED,cAAe7B,eAAc"},"metadata":{},"sourceType":"module"}