{"ast":null,"code":"var _jsxFileName = \"/Users/sethstephens/Desktop/fureverv4 2/furever/Client/src/components/Authentication/AuthPopup.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport './AuthPopup.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPopup = _ref => {\n  _s();\n  let {\n    setShowPopup,\n    isSignUp\n  } = _ref;\n  // The code is setting up a stateful component in React. The email, password, and confirmPassword variables are all set to null, \n  // and the error variable is set to null. The cookies variable is set to an object containing the cookies for the current domain, \n  // and the setCookie and removeCookie functions are used to set and remove cookies, respectively.\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [error, setError] = useState(null);\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n\n  // The navigate variable is set to a function that can be used to navigate to a different route.\n  let navigate = useNavigate();\n\n  // The handleSubmit function is called when the user clicks the submit button. It checks if the user is signing up or logging in,\n  const handleClick = () => {\n    setShowPopup(false);\n  };\n\n  // The handleSubmit function is called when the user clicks the submit button. It checks if the user is signing up or logging in,\n  // and then sends a request to the server to either create a new user or log in the user.\n  // prevent default is used to prevent the page from refreshing when the form is submitted.\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // The code above is attempting to sign a user up or log a user in. If the user is signing up, it checks to see if the \n    // password and confirm password fields match. If they do match, it sends a post request to the server with the email and password. \n    // If the server responds with a status of 201, it means the user was successfully created, and the user is redirected to the onboarding page. \n    // If the user is logging in and the server responds with a status of 201, it means the user was successfully logged in and the \n    // user is redirected to the dashboard.        \n\n    try {\n      if (isSignUp && password !== confirmPassword) {\n        setError('Passwords need to match!');\n        return;\n      }\n      const response = await axios.post(`http://localhost:8888/${isSignUp ? 'signup' : 'login'}`, {\n        email,\n        password\n      });\n      setCookie('AuthToken', response.data.token);\n      setCookie('UserId', response.data.userId);\n      const success = response.status === 201;\n      if (success && isSignUp) navigate('/onboarding');\n      if (success && !isSignUp) navigate('/dashboard');\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authPopup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-icon\",\n      onClick: handleClick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isSignUp ? 'CREATE ACCOUNT' : 'LOG IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password-check\",\n        name: \"password-check\",\n        placeholder: \"confirm password\",\n        required: true,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"secondary-button\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPopup, \"PNyz+4ZYyuMnZy8q0VNW8kswa6E=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = AuthPopup;\nexport default AuthPopup;\nvar _c;\n$RefreshReg$(_c, \"AuthPopup\");","map":{"version":3,"names":["useState","axios","useNavigate","useCookies","AuthPopup","setShowPopup","isSignUp","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","cookies","setCookie","removeCookie","navigate","handleClick","handleSubmit","e","preventDefault","response","post","data","token","userId","success","status","window","location","reload","console","log","target","value"],"sources":["/Users/sethstephens/Desktop/fureverv4 2/furever/Client/src/components/Authentication/AuthPopup.js"],"sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport './AuthPopup.scss'\n\n\nconst AuthPopup = ({ setShowPopup,  isSignUp }) => {\n\n    // The code is setting up a stateful component in React. The email, password, and confirmPassword variables are all set to null, \n    // and the error variable is set to null. The cookies variable is set to an object containing the cookies for the current domain, \n    // and the setCookie and removeCookie functions are used to set and remove cookies, respectively.\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n    const [confirmPassword, setConfirmPassword] = useState(null)\n    const [error, setError] = useState(null)\n    const [ cookies, setCookie, removeCookie] = useCookies(null)\n\n\n    // The navigate variable is set to a function that can be used to navigate to a different route.\n    let navigate = useNavigate()\n\n    // The handleSubmit function is called when the user clicks the submit button. It checks if the user is signing up or logging in,\n    const handleClick = () => {\n        setShowPopup(false)\n    }\n\n    // The handleSubmit function is called when the user clicks the submit button. It checks if the user is signing up or logging in,\n    // and then sends a request to the server to either create a new user or log in the user.\n    // prevent default is used to prevent the page from refreshing when the form is submitted.\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n\n        // The code above is attempting to sign a user up or log a user in. If the user is signing up, it checks to see if the \n        // password and confirm password fields match. If they do match, it sends a post request to the server with the email and password. \n        // If the server responds with a status of 201, it means the user was successfully created, and the user is redirected to the onboarding page. \n        // If the user is logging in and the server responds with a status of 201, it means the user was successfully logged in and the \n        // user is redirected to the dashboard.        \n\n        try {\n            if (isSignUp && (password !== confirmPassword)) {\n                setError('Passwords need to match!')\n                return\n            }\n\n            const response = await axios.post(`http://localhost:8888/${isSignUp ? 'signup' : 'login'}`, { email, password })\n\n            setCookie('AuthToken', response.data.token)\n            setCookie('UserId', response.data.userId)\n\n            const success = response.status === 201\n            if (success && isSignUp) navigate ('/onboarding')\n            if (success && !isSignUp) navigate ('/dashboard')\n\n            window.location.reload()\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    return (\n        <div className=\"authPopup\">\n            <div className=\"close-icon\" onClick={handleClick}>X</div>\n\n            <h2>{isSignUp ? 'CREATE ACCOUNT': 'LOG IN'}</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    required={true}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    required={true}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                {isSignUp && <input\n                    type=\"password\"\n                    id=\"password-check\"\n                    name=\"password-check\"\n                    placeholder=\"confirm password\"\n                    required={true}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                />}\n                <input className=\"secondary-button\" type=\"submit\"/>\n                <p>{error}</p>\n            </form>\n        </div>\n    )\n}\nexport default AuthPopup"],"mappings":"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"},"metadata":{},"sourceType":"module"}